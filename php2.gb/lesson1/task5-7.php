<?php

// 5. Дан код:
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo(); //1  преинкремент увеличит значение $х на 1 и выведет значение на экран.
$a2->foo(); //2  т.к. $x - статическая переменная, то компилятор не будет ее удалять после завершения работы этой функции, а значит преинкремент увеличит значение $x ещё на 1.  
$a1->foo(); //3  по той же причине
$a2->foo(); //4  по той же причине
// Что он выведет на каждом шаге? Почему?

// Немного изменим п.5:
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo(); //1  преинкремент увеличит значение $х на 1 и выведет значение на экран.
$b1->foo(); //1  класс В при наследовании получает свою статическую переменную $x.
$a1->foo(); //2  преинкремент увеличит значение $х на 1
$b1->foo(); //2  --"--

// 6. Объясните результаты в этом случае.
// 7. *Дан код:
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A;  // Этот пример аналогичен предыдуему, только экземпляры созданы без ().
$b1 = new B;
$a1->foo(); //1
$b1->foo(); //1
$a1->foo(); //2
$b1->foo(); //2
// Что он выведет на каждом шаге? Почему?